package commands

import (
	"fmt"
	"remnawave-tg-shop/internal/bot/keyboards"
	"remnawave-tg-shop/internal/bot/utils"
	"remnawave-tg-shop/internal/config"
	"remnawave-tg-shop/internal/models"
	"remnawave-tg-shop/internal/services"

	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
)

// StartHandler –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /start
type StartHandler struct {
	config              *config.Config
	userService         services.UserService
	subscriptionService services.SubscriptionService
	keyboard            *keyboards.MainMenuKeyboard
}

// NewStartHandler —Å–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–π StartHandler
func NewStartHandler(
	config *config.Config,
	userService services.UserService,
	subscriptionService services.SubscriptionService,
) *StartHandler {
	return &StartHandler{
		config:              config,
		userService:         userService,
		subscriptionService: subscriptionService,
		keyboard:            keyboards.NewMainMenuKeyboard(config, subscriptionService),
	}
}

// Handle –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /start
func (h *StartHandler) Handle(message *tgbotapi.Message, user *models.User, args string) error {
	// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–≥–æ –∫–æ–¥–∞
	if args != "" {
		referralUser, err := h.userService.GetUserByReferralCode(args)
		if err == nil && referralUser != nil && referralUser.ID != user.ID {
			user.ReferredBy = &referralUser.ID
			h.userService.UpdateUser(user)
			h.userService.AddBalance(referralUser.ID, 50)
		}
	}

	// –§–æ—Ä–º–∏—Ä—É–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ —Å –∏–º–µ–Ω–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
	username := user.GetDisplayName()
	text := fmt.Sprintf("–ü—Ä–∏–≤–µ—Ç, %süëã\n\n", username)
	text += "–ß—Ç–æ –±—ã –≤—ã —Ö–æ—Ç–µ–ª–∏ —Å–¥–µ–ª–∞—Ç—å?"

	// –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
	keyboard := h.keyboard.Create(user)

	// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
	return utils.SendMessageWithTelegoKeyboard(message.Chat.ID, text, keyboard, h.config.BotToken)
}
